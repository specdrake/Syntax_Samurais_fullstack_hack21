"""
Django settings for locowin project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import datetime

# for env file
import os
import dj_database_url

# For Local
#from dotenv import load_dotenv, find_dotenv
#load_dotenv(find_dotenv())

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# FOR LOCAL
#SECRET_KEY = os.getenv('SECRET_KEY')
# FOR HEROKU 
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!

# FOR LOCAL
#DEBUG = os.getenv('DEBUG')
# FOR HEROKU 
DEBUG = os.environ.get('DEBUG')

ALLOWED_HOSTS = ['*', '127.0.0.1','0.0.0.0', 'locowin.herokuapp.com']

AUTH_USER_MODEL = 'user.User'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    #local
    'user',
    'vans',
    
    
    #Installed
    'rest_framework',
    'drf_yasg',
    'corsheaders',
    'whitenoise.runserver_nostatic',
]
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'corsheaders.middleware.CorsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'locowin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'locowin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# FOR LOCAL
#DATABASES = {
#   'default': {
#   'ENGINE': 'django.db.backends.mysql',
#   'NAME': os.getenv('DB_NAME'),
#   'USER': os.getenv('DB_USER'),
#   'PASSWORD': os.getenv('DB_PASSWORD'),
#   'HOST': os.getenv('DB_HOST'),
#   'PORT': os.getenv('DB_PORT'),
#   'OPTIONS' : { 'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"}
#    }
#}

# FOR HEROKU
db_from_env = dj_database_url.config(conn_max_age=600)
DATABASES = {
        'default': db_from_env
        #'ENGINE': 'django.db.backends.postgresql_psycopg2',
        #'NAME': os.getenv('DB_NAME'),
        #'USER': os.getenv('DB_USER'),
        #'PASSWORD': os.getenv('DB_PASSWORD'),
        #'HOST': os.getenv('DB_HOST'),
        #'PORT': os.getenv('DB_PORT'),
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [os.path.join(BASE_DIR,'project_name/static')]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_ROOT = os.path.join(BASE_DIR,'media')
MEDIA_URL = '/media/'

REST_FRAMEWORK = {
    'NON_FIELD_ERRORS_KEY' : 'error',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=60),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=365),
}

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_PORT = 587
#EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_USER = "noreply.locowin@gmail.com"
#EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
EMAIL_HOST_PASSWORD = "iovkxinbcormsmij"

DEFAULT_AUTO_FIELD='django.db.models.AutoField'
